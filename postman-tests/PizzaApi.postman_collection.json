{
	"info": {
		"_postman_id": "c62b8cc2-889f-49ae-b513-1ccafd630783",
		"name": "PizzaApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23514572"
	},
	"item": [
		{
			"name": "Get All Pizzas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Set the request method to GET\r",
							"pm.test(\"Request method is GET\", () => {\r",
							"    pm.expect(pm.request.method).to.be.equal(\"GET\");\r",
							"});\r",
							"\r",
							"// Check the response status code\r",
							"pm.test(\"Response status code is 200\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Check the response body\r",
							"pm.test(\"Response body is correct\", () => {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // Check that the response body has the expected structure\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"    pm.expect(jsonData[0]).to.have.property(\"name\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData[0]).to.have.property(\"price\").that.is.a(\"number\");\r",
							"    pm.expect(jsonData[0]).to.have.property(\"ingredients\").that.is.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7216/Pizza",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7216",
					"path": [
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Pizza By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Set the request method to GET\r",
							"pm.test(\"Request method is GET\", () => {\r",
							"    pm.expect(pm.request.method).to.be.equal(\"GET\");\r",
							"});\r",
							"\r",
							"// Check the response status code\r",
							"pm.test(\"Response status code is 200\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Check the response body\r",
							"pm.test(\"Response body is correct\", () => {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // Check that the response body has the expected structure\r",
							"    pm.expect(jsonData).to.have.property(\"name\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"price\").that.is.a(\"number\");\r",
							"    pm.expect(jsonData).to.have.property(\"ingredients\").that.is.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7216/Pizza/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7216",
					"path": [
						"Pizza",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Pizza",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Set the request method to GET\r",
							"pm.test(\"Request method is POST\", () => {\r",
							"    pm.expect(pm.request.method).to.be.equal(\"POST\");\r",
							"});\r",
							"\r",
							"// Check the response status code\r",
							"pm.test(\"Response status code is 200\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Check the response body\r",
							"pm.test(\"Response body is correct\", () => {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    // Check that the response body has the expected structure\r",
							"    pm.expect(jsonData).to.have.property(\"name\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"price\").that.is.a(\"number\");\r",
							"    pm.expect(jsonData).to.have.property(\"ingredients\").that.is.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test\",\r\n    \"price\": 100,\r\n    \"ingredientIds\":[\r\n        1\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7216/Pizza",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7216",
					"path": [
						"Pizza"
					]
				}
			},
			"response": []
		}
	]
}